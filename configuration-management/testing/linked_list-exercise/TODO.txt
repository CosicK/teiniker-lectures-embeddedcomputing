Exercise: Linked-List Tests
--------------------------------------------------------------------------------

Given the implementation of a simple linked list:
├── include
│   └── linked_list.h
├── src
│   ├── linked_list.c
│   └── main.c

1. Project setup
--------------------------------------------------------------------------------
Create a "test" directory containing a "linked_list_test.c" file.

Extend the existing "Makefile" to also build the executable "build/test" file:
$ make test
mkdir -p build
gcc -std=c99 -g -Wall   -o build/unity.o -c ../unity/unity.c 
gcc -std=c99 -g -Wall   -I include -o build/linked_list.o -c src/linked_list.c 
gcc -std=c99 -g -Wall   -I include -I ../unity -o build/linked_list_test.o -c test/linked_list_test.c 
gcc -std=c99 -g -Wall   build/unity.o build/linked_list.o build/linked_list_test.o -o build/test

2. Test cases
--------------------------------------------------------------------------------
Within the "linked_list_test.c" file implement

i) a "setUp()" function that creates a linked list containing four elements as 
	shown in the "main.c" file.

ii) a "tearDown()" function which removes the linked list from the heap, as
	shown in the "main.c" file.
	
iii) the following test cases:

a) test_ListSize
	Verify the length of the linked list (see "main.c")
	
b) test_ListElements
	Verify all elements of the linked list (see "main.c")
	
Finally, implement a "main()" function which collects all these test cases
into a single test suite.

Run the test suite like:

$ build/test
test/linked_list_test.c:47:test_ListSize:PASS
test/linked_list_test.c:48:test_ListElements:PASS

-----------------------
2 Tests 0 Failures 0 Ignored 
OK
	 
